# @package _global_

defaults:
  - /tasks: ExtObjNav
  - /habitat_baselines: habitat_baselines_rl2_config_base
  - /habitat/simulator/sim_sensors@habitat_baselines.eval.extra_sim_sensors.third_rgb_sensor: third_rgb_sensor
  - /policy@habitat_baselines.rl.policy.main_agent: lstm
  - _self_

habitat_baselines:
  verbose: False
  trainer_name: "ddppo"
  torch_gpu_id: 0
  tensorboard_dir: "tb"
  video_dir: "video_dir"
  video_fps: 30
  test_episode_count: -1
  eval_ckpt_path_dir: "data/new_checkpoints"
  num_environments: 20
  writer_type: 'tb'
  checkpoint_folder: "data/new_checkpoints"
  num_updates: -1
  total_num_steps: 1.0e9
  log_interval: 10
  num_checkpoints: 200
  reset_envs_after_update: True
  call_after_update_env: True
  # Force PyTorch to be single threaded as
  # this improves performance considerably
  force_torch_single_threaded: True
  eval_keys_to_include_in_name: ['reward', 'force', 'success']

  separate_envs_and_policy: False
  separate_rollout_and_policy: False

  vector_env_factory:
    _target_: "relic.envs.train_env_factory.HabitatVectorEnvFactory"
  eval:
    video_option: ["disk"]

  rl:
    ppo:
      # ppo params
      clip_param: 0.2
      ppo_epoch: 4
      num_mini_batch: 2
      grad_accum_mini_batches: 1
      value_loss_coef: 0.5
      entropy_coef: 0.01
      lr: 2.5e-4
      optimizer_name: adam
      adamw_weight_decay: 0.1
      warmup: True
      warmup_total_iters: 100000
      warmup_start_factor: 1e-3
      lr_scheduler: cosine_decay
      lrsched_T_max: 1000000000
      lrsched_eta_min: 1e-5

      eps: 1e-5
      max_grad_norm: 0.2
      num_steps: 64
      use_gae: True
      gamma: 0.99
      tau: 0.95
      use_linear_clip_decay: False
      use_linear_lr_decay: False
      reward_window_size: 50

      use_normalized_advantage: False

      hidden_size: 512

      # Use double buffered sampling, typically helps
      # when environment time is similar or larger than
      # policy inference time during rollout generation
      use_double_buffered_sampler: True
      update_stale_kv: True
      update_stale_values: True
      full_updates_per_rollout: 1
      updates_per_rollout: 16
      ignore_old_obs_grad: False
      storage_low_precision: True
      gradient_checkpointing: False
      slice_in_partial_update: False
      percent_envs_update: 1
      shuffle_old_episodes: True
      shift_scene_every: 100000

    ddppo:
      sync_frac: 0.6
      # The PyTorch distributed backend to use
      distrib_backend: NCCL
      # Visual encoder backbone
      pretrained_weights: data/ddppo-models/gibson-2plus-resnet50.pth
      # Initialize with pretrained weights
      pretrained: False
      # Initialize just the visual encoder backbone with pretrained weights
      pretrained_encoder: False
      # Whether the visual encoder backbone will be trained.
      train_encoder: False
      # Whether to reset the critic linear layer
      reset_critic: True

      # Model parameters
      backbone: vc1_vc1_vitb_ft_cls_e15
      rnn_type: LSTM
      num_recurrent_layers: 2
